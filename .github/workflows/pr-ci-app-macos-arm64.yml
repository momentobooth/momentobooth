name: PR CI App - macOS ARM64

on:
  pull_request:
    branches: [ main ]
    paths-ignore: [ documentation/**, .github/workflows/pr-ci-documentation.yml, .github/workflows/deploy-documentation.yml, README.md ]
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    permissions:
      contents: write
      pull-requests: write

    if: ${{ startsWith(github.event.pull_request.head.ref, 'release/') != true && github.event.pull_request.draft != true }}

    runs-on: macos-latest
    timeout-minutes: 45

    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.ref }}
        submodules: 'true'

    - name: Run ssh-agent
      uses: webfactory/ssh-agent@v0.9.1
      with:
        ssh-private-key: ${{ secrets.MATCH_CERTIFICATES_GIT_ACCESS_TOKEN }}

    - name: Install Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3'
        bundler-cache: true 

    - name: Install keys, certificates and profiles
      env:
        MATCH_CERTIFICATES_GIT_URL: ${{ secrets.MATCH_CERTIFICATES_GIT_URL }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
        APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }}
      run: bundle exec fastlane ci_install_release_cert_using_api

    - name: Detect Flutter Version
      uses: kuhnroyal/flutter-fvm-config-action@v3

    - name: Setup Flutter
      uses: flutter-actions/setup-flutter@v4
      with:
        channel: stable
        version: ${{ env.FLUTTER_VERSION }}
        cache: true
        cache-sdk: true

    - name: Disable Flutter analytics and CLI animations
      run: flutter config --no-analytics --no-cli-animations

    - name: Flutter SDK precache
      run: flutter precache --macos

    - name: Install minimal Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        targets: aarch64-apple-darwin,x86_64-apple-darwin

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: |
          rust -> ../build/macos/Build/Intermediates.noindex/Pods.build/Release/rust_lib_momento_booth.build/aarch64-apple-darwin
          rust -> ../build/macos/Build/Intermediates.noindex/Pods.build/Release/rust_lib_momento_booth.build/x86_64-apple-darwin
          rust -> target
      
    - name: Setup sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.9

    - name: Install cargo-binstall
      uses: cargo-bins/cargo-binstall@v1.14.1

    - name: Install cargo-expand
      run: cargo binstall cargo-expand --force

    - name: Install flutter_rust_bridge_codegen
      run: cargo binstall flutter_rust_bridge_codegen@2.10.0 --force

    - name: Install dependencies
      run: flutter pub get --enforce-lockfile

    - name: Generation l10n
      run: flutter gen-l10n

    - name: Install build dependencies
      run: |
        brew install pkgconf create-dmg

    - name: Download and unpack Homebrew libraries
      run: |
        mkdir ci_build && cd ci_build
        ../macos/ci_download_deps.sh -a arm64_ventura,ventura libgphoto2 gexiv2
        ../macos/ci_adapt_pkgconf_dirs.sh ventura/lib/pkgconfig
        ../macos/ci_adapt_pkgconf_dirs.sh arm64_ventura/lib/pkgconfig

    - name: Generate Dart-to-Rust bridging code
      run: PKG_CONFIG_PATH=$(realpath ci_build/arm64_ventura/lib/pkgconfig) flutter_rust_bridge_codegen generate

    - name: Run build_runner
      run: dart run build_runner build

    - name: Flutter analyze
      run: flutter analyze

    - name: Build project (arm64)
      run: |
        rm macos/Podfile.lock
        FLUTTER_XCODE_ARCHS=arm64 PKG_CONFIG_PATH=$(realpath ci_build/arm64_ventura/lib/pkgconfig) flutter build macos -v --dart-define SENTRY_DSN=${{ secrets.SENTRY_DSN }} --dart-define SENTRY_ENVIRONMENT=Production --dart-define SENTRY_RELEASE=${{ github.sha }} --dart-define IOLIBS=../Libs/Iolibs --dart-define CAMLIBS=../Libs/Camlibs

        mkdir ci_build/arm64_bundle
        mv build/macos/Build/Products/Release/MomentoBooth.app ci_build/arm64_bundle/

        flutter clean
        flutter pub get --enforce-lockfile

    - name: Build project (x86_64)
      run: |
        rm macos/Podfile.lock
        FLUTTER_XCODE_ARCHS=x86_64 PKG_CONFIG_PATH=$(realpath ci_build/ventura/lib/pkgconfig) PKG_CONFIG_SYSROOT_DIR=$(realpath ci_build/ventura) flutter build macos -v --dart-define SENTRY_DSN=${{ secrets.SENTRY_DSN }} --dart-define SENTRY_ENVIRONMENT=Production --dart-define SENTRY_RELEASE=${{ github.sha }} --dart-define IOLIBS=../Libs/Iolibs --dart-define CAMLIBS=../Libs/Camlibs

        mkdir ci_build/x86_64_bundle
        mv build/macos/Build/Products/Release/MomentoBooth.app ci_build/x86_64_bundle/

    - name: Bundle libraries
      run: |
        cd ci_build/arm64_bundle
        python3 ../../macos/ci_bundle_libraries.py MomentoBooth.app/Contents/MacOS/MomentoBooth MomentoBooth.app/Contents/Libs ../arm64_ventura/lib
        python3 ../../macos/ci_bundle_libraries.py MomentoBooth.app/Contents/Frameworks MomentoBooth.app/Contents/Libs ../arm64_ventura/lib
        mkdir -p ./MomentoBooth.app/Contents/Libs/{Camlibs,Iolibs}
        cp ../arm64_ventura/lib/libgphoto2/*/*.so ./MomentoBooth.app/Contents/Libs/Camlibs
        cp ../arm64_ventura/lib/libgphoto2_port/*/*.so ./MomentoBooth.app/Contents/Libs/Iolibs
        python3 ../../macos/ci_bundle_libraries.py MomentoBooth.app/Contents/Libs/Camlibs MomentoBooth.app/Contents/Libs ../arm64_ventura/lib
        python3 ../../macos/ci_bundle_libraries.py MomentoBooth.app/Contents/Libs/Iolibs MomentoBooth.app/Contents/Libs ../arm64_ventura/lib
        chmod 755 MomentoBooth.app/Contents/Libs/* MomentoBooth.app/Contents/Libs/Camlibs/* MomentoBooth.app/Contents/Libs/Iolibs/*

        cd ../x86_64_bundle
        python3 ../../macos/ci_bundle_libraries.py MomentoBooth.app/Contents/MacOS/MomentoBooth MomentoBooth.app/Contents/Libs ../ventura/lib
        python3 ../../macos/ci_bundle_libraries.py MomentoBooth.app/Contents/Frameworks MomentoBooth.app/Contents/Libs ../ventura/lib
        mkdir -p ./MomentoBooth.app/Contents/Libs/{Camlibs,Iolibs}
        cp ../ventura/lib/libgphoto2/*/*.so ./MomentoBooth.app/Contents/Libs/Camlibs
        cp ../ventura/lib/libgphoto2_port/*/*.so ./MomentoBooth.app/Contents/Libs/Iolibs
        python3 ../../macos/ci_bundle_libraries.py MomentoBooth.app/Contents/Libs/Camlibs MomentoBooth.app/Contents/Libs ../ventura/lib
        python3 ../../macos/ci_bundle_libraries.py MomentoBooth.app/Contents/Libs/Iolibs MomentoBooth.app/Contents/Libs ../ventura/lib
        chmod 755 MomentoBooth.app/Contents/Libs/* MomentoBooth.app/Contents/Libs/Camlibs/* MomentoBooth.app/Contents/Libs/Iolibs/*

    - name: Resign bundles
      run: |
        cd ci_build
        python3 ../macos/ci_resign_everything.py arm64_bundle/MomentoBooth.app "${{ secrets.APPLE_SIGNING_IDENTITY }}"
        python3 ../macos/ci_resign_everything.py x86_64_bundle/MomentoBooth.app "${{ secrets.APPLE_SIGNING_IDENTITY }}"

    - name: Create dmg installers and sign
      run: |
        cd ci_build
        create-dmg --volname "MomentoBooth (Apple Silicon) Installer" --hide-extension "MomentoBooth.app" --window-pos 200 120 --window-size 800 400 --app-drop-link 600 185 "MomentoBooth-AppleSilicon.dmg" "arm64_bundle/MomentoBooth.app"
        create-dmg --volname "MomentoBooth (Intel) Installer" --hide-extension "MomentoBooth.app" --window-pos 200 120 --window-size 800 400 --app-drop-link 600 185 "MomentoBooth-Intel.dmg" "x86_64_bundle/MomentoBooth.app"

        python3 ../macos/ci_resign_everything.py MomentoBooth-AppleSilicon.dmg "${{ secrets.APPLE_SIGNING_IDENTITY }}"
        python3 ../macos/ci_resign_everything.py MomentoBooth-Intel.dmg "${{ secrets.APPLE_SIGNING_IDENTITY }}"

    - name: Upload arm64 dmg
      uses: actions/upload-artifact@v4
      with:
        name: MomentoBooth-AppleSilicon.dmg
        path: ci_build/MomentoBooth-AppleSilicon.dmg

    - name: Upload x86_64 dmg
      uses: actions/upload-artifact@v4
      with:
        name: MomentoBooth-Intel.dmg
        path: ci_build/MomentoBooth-Intel.dmg

    - name: Commit changes to macOS build files and create PR
      id: cpr
      uses: peter-evans/create-pull-request@v7
      with:
        add-paths: macos
        commit-message: Update macOS build files
        title: Update macOS build files
        body: This PR is created by the macOS CI pipeline, to help keeping the macOS build working.
        branch: chore/update-macos-build-files

    - name: Add comment to remind of created PR
      if: ${{ steps.cpr.outputs.pull-request-number }}
      uses: thollander/actions-comment-pull-request@v3
      with:
        message: I created PR \#${{ steps.cpr.outputs.pull-request-number }} for you to update the macOS build.
